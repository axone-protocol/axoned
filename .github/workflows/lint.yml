name: Lint

on:
  workflow_call:

  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-commits:
    runs-on: ubuntu-20.04
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check commits
        uses: wagoid/commitlint-github-action@v5

  lint-markdown:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Lint markdown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          args: "**/*.md"
          ignore: "CHANGELOG.md"

  lint-yaml:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Lint yaml files
        uses: ibiqlik/action-yamllint@v3.1.0

  lint-json:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Lint json files
        run: |
          sudo apt install -y jsonlint

          find ./ -type f -name "*.json" -exec sh -c '
            for file do
              if ! jsonlint-php -q "$file"; then
                echo "‚ùå $file"
                export FAILED=1
              else
                echo "‚úÖ $file"
              fi
            done
            if [ "${FAILED}" = "1" ]; then
              exit 1
            fi
          ' sh {} +

  lint-go:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Find changed go files
        id: changed-go-files
        uses: tj-actions/changed-files@v28
        with:
          files: |
            **/*.go
            go.mod
            go.sum

      - name: Lint go code (golangci-lint)
        uses: golangci/golangci-lint-action@v3
        if: steps.changed-go-files.outputs.any_changed == 'true'
        with:
          version: v1.44

  lint-dockerfile:
    runs-on: ubuntu-20.04
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Lint dockerfile (hadolint)
        uses: hadolint/hadolint-action@v2.1.0

      - name: Lint dockerfile (docker-lint)
        uses: luke142367/Docker-Lint-Action@v1.1.1
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint-branch-name:
    runs-on: ubuntu-20.04
    if: github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
    steps:
      - name: Check branch name conventions
        uses: AlbertHernandez/branch-name-action@v1.0.2
        with:
          branch_pattern: "feat|fix|build|ci|docs|style|refactor|perf|test|chore"
          comment_for_invalid_branch_name: |
            üôã‚Äç Oops! This branch name does not follow the naming convention.

            <hr>

            Please, see the following branch naming convention:

            Branch naming convention | Purpose
            ------------------------ | -------
            `feat/**`                | A new feature
            `fix/**`                 | A bug fix
            `build/**`               | Changes that affect the build system (npm, mavem, poetry)
            `ci/**`                  | Changes to the CI configuration
            `docs/**`                | Documentation only changes
            `style/**`               | Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
            `refactor/**`            | Code changes that neither fixe a bug nor adds a feature
            `perf/**`                | Code changes that improve performance
            `test/**`                | When adding tests or correcting existing tests
            `chore/**`               | Other changes that don't modify source
          fail_if_invalid_branch_name: "true"
          ignore_branch_pattern: "main"
      - name: Close non-compliant branch
        if: ${{ failure() }}
        uses: codelytv/no-pull-requests@v1
        with:
          GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}
          message: üôÖ Closing the PR because it does not respect naming conventions. Edit the branch name and submit a new PR.
    env:
      GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}

  lint-genesis:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3.2.1
        with:
          go-version: "1.18.2"

      - name: Build go project
        run: |
          make build

      - name: Check devnet genesis files
        run: |
          ./target/dist/okp4d validate-genesis ./chains/devnet-1/pre-genesis.json
          ./target/dist/okp4d validate-genesis ./chains/devnet-1/genesis.json

  lint-generated:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Setup Go environment
        uses: actions/setup-go@v3.2.1
        with:
          go-version: "1.18.2"

      - name: Install Ignite CLI
        run: |
          curl https://get.ignite.com/cli@v0.22.2! | bash

      - name: Generate OpenAPI spec for the chain
        run: |
          ignite version
          ignite generate openapi --yes

      - name: Check Git diff in generated files (openapi.yml)
        run: |
          if [[ $(git status -s | grep -v 'go.mod$' | grep -v 'go.sum$') != "" ]]; then
            >&2 echo "‚ùå There is a diff between generated files and source code"
            >&2 git status
            exit 1
          fi
